<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>SQL注入漏洞分析</title>
      <link href="/2018/10/27/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
      <url>/2018/10/27/SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>Metinfo 6.1.2 SQL注入漏洞分析</p><h1 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h1><p>Metinfo 米拓企业建站系统是一款适合企业网站建设的开源CMS系统,近期互联网上公开爆出 Metinfo 6.1.2 版本存在SQL注入漏洞，随后一秋网络安全团队对其漏洞进行了复现与分析。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>漏洞触发的代码在 <code>/app/system/message/web/message.class.php</code> 文件 第37行，<code>add</code>方法部分。</p><pre class=" language-php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">global</span> <span class="token variable">$_M</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_M</span><span class="token punctuation">[</span>form<span class="token punctuation">]</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           <span class="token variable">$message</span><span class="token operator">=</span><span class="token constant">DB</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">get_one</span><span class="token punctuation">(</span><span class="token string">"select * from {$_M[table][column]} where module= 7 and lang ='{$_M[form][lang]}'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token variable">$_M</span><span class="token punctuation">[</span>form<span class="token punctuation">]</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$message</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token variable">$met_fd_ok</span><span class="token operator">=</span><span class="token constant">DB</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">get_one</span><span class="token punctuation">(</span><span class="token string">"select * from {$_M[table][config]} where lang ='{$_M[form][lang]}' and  name= 'met_fd_ok' and columnid = {$_M[form][id]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$_M</span><span class="token punctuation">[</span>config<span class="token punctuation">]</span><span class="token punctuation">[</span>met_fd_ok<span class="token punctuation">]</span><span class="token operator">=</span> <span class="token variable">$met_fd_ok</span><span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_M</span><span class="token punctuation">[</span>config<span class="token punctuation">]</span><span class="token punctuation">[</span>met_fd_ok<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">okinfo</span><span class="token punctuation">(</span><span class="token string">'javascript:history.back();'</span><span class="token punctuation">,</span><span class="token string">"{$_M[word][Feedback5]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_M</span><span class="token punctuation">[</span>config<span class="token punctuation">]</span><span class="token punctuation">[</span>met_memberlogin_code<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>load<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">sys_class</span><span class="token punctuation">(</span><span class="token string">'pin'</span><span class="token punctuation">,</span> <span class="token string">'new'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">check_pin</span><span class="token punctuation">(</span><span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">okinfo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'word'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'membercode'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span></code></pre><p>从上述代码分析发现 </p><pre class=" language-php"><code class="language-php"> `<span class="token variable">$met_fd_ok</span><span class="token operator">=</span><span class="token constant">DB</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">get_one</span><span class="token punctuation">(</span><span class="token string">"select * from {$_M[table][config]} where lang ='{$_M[form][lang]}' and  name= 'met_fd_ok' and columnid = {$_M[form][id]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>`</code></pre><p> 语句中 <code>{$_M[form][id]}</code> 参数，没有用单引号引起来判断此处应该有SQL注入漏洞。</p><p>直接拼接SQL 注入payload发现，注入的payload被过滤，无法直接进行SQL注入。继续往下分析。</p><p>继续分析发现 <code>message.class.php</code> 文件 调用了 <code>class feedback extends web</code>  父类初始化函数，跟进web类。</p><p>web类定义在  <code>/app/system/include/class/web.class.php</code> 文件。分析web类，没有发现对参数进行过滤的函数，但是发现初始化了 <code>common</code>类。 跟进<code>common</code>类，定义在<code>/app/system/include/class/common.class.php</code>文件。</p><pre class=" language-php"><code class="language-php"> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">global</span> <span class="token variable">$_M</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//全局数组$_M</span>        <span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开启缓存</span>         <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">load_mysql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//数据库连接</span>         <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">load_form</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//表单过滤</span>         <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">load_lang</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//加载语言配置</span>         <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">load_config_global</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//加载全站配置数据</span>       <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">load_url_site</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">load_config_lang</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//加载当前语言配置数据</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">load_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//加载url数据</span>    <span class="token punctuation">}</span></code></pre><p>发现问题关键点，<code>$this-&gt;load_form();//表单过滤</code>,继续跟进<code>$this-&gt;load_form();</code>函数。</p><p>在<code>/app/system/include/class/common.class.php</code>文件51行、</p><pre class=" language-php"><code class="language-php"> <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">load_form</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">global</span> <span class="token variable">$_M</span><span class="token punctuation">;</span>       <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'GLOBALS'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">'Access Error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span> <span class="token keyword">as</span> <span class="token variable">$_key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$_value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$_key</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span> <span class="token operator">!=</span> <span class="token string">'_'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$_key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">daddslashes</span><span class="token punctuation">(</span><span class="token variable">$_value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_POST</span> <span class="token keyword">as</span> <span class="token variable">$_key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$_value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$_key</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span> <span class="token operator">!=</span> <span class="token string">'_'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$_key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">daddslashes</span><span class="token punctuation">(</span><span class="token variable">$_value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$_key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$_value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$_key</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span> <span class="token operator">!=</span> <span class="token string">'_'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$_key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">daddslashes</span><span class="token punctuation">(</span><span class="token variable">$_value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'lang'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//伪静态兼容</span>            <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'lang'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'lang'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'metid'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'list'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'list'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'metid'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'page'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">'/^[0-9A-Za-z]+$/'</span><span class="token punctuation">,</span> <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'lang'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'lang'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           <span class="token keyword">echo</span> <span class="token string">"No data in the database,please reinstall."</span><span class="token punctuation">;</span>           <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre><p>这里看到把 POST、GET、COOKIE 传递过来的参数用<code>daddslashes</code>进行了全局过滤。跟进<code>daddslashes</code>。</p><pre class=" language-php"><code class="language-php"> <span class="token keyword">function</span> <span class="token function">daddslashes</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token variable">$force</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token operator">!</span><span class="token function">defined</span><span class="token punctuation">(</span><span class="token string">'MAGIC_QUOTES_GPC'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'MAGIC_QUOTES_GPC'</span><span class="token punctuation">,</span> <span class="token function">get_magic_quotes_gpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token constant">MAGIC_QUOTES_GPC</span> <span class="token operator">||</span> <span class="token variable">$force</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$string</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token variable">$string</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">daddslashes</span><span class="token punctuation">(</span><span class="token variable">$val</span><span class="token punctuation">,</span> <span class="token variable">$force</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">defined</span><span class="token punctuation">(</span><span class="token string">'IN_ADMIN'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>               <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token function">sqlinsert</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token variable">$string</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>这里判断是否开启了get_magic_quotes_gpc() ，如果没开启或者 <code>$force</code>不为空就进入下面的逻辑。有判断了是否定义<code>IN_ADMIN</code> 常量，如果没有定义就进入 <code>$string = trim(addslashes(sqlinsert($string)));</code>,从代码逻辑发现我们第一步进行SQL注入，失败是因为注入的payload被过滤导致，那么我们传递的值应该就是进入了这个过滤，用<code>sqlinsert</code>函数进行了过滤。</p><p>看一下<code>sqlinsert</code>函数是怎么进行的过滤。</p><pre class=" language-php"><code class="language-php">     <span class="token keyword">function</span> <span class="token function">sqlinsert</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$string</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                 <span class="token variable">$string</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sqlinsert</span><span class="token punctuation">(</span><span class="token variable">$val</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>             <span class="token variable">$string_old</span> <span class="token operator">=</span> <span class="token variable">$string</span><span class="token punctuation">;</span>             <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"\\"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"\""</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"%5C"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"%22"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"%27"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"%2A"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"~"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"select"</span><span class="token punctuation">,</span> <span class="token string">"\sel\ect"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"insert"</span><span class="token punctuation">,</span> <span class="token string">"\ins\ert"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"update"</span><span class="token punctuation">,</span> <span class="token string">"\up\date"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"delete"</span><span class="token punctuation">,</span> <span class="token string">"\de\lete"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"union"</span><span class="token punctuation">,</span> <span class="token string">"\un\ion"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"into"</span><span class="token punctuation">,</span> <span class="token string">"\in\to"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"load_file"</span><span class="token punctuation">,</span> <span class="token string">"\load\_\file"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"outfile"</span><span class="token punctuation">,</span> <span class="token string">"\out\file"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token string">"sleep"</span><span class="token punctuation">,</span> <span class="token string">"\sle\ep"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">strip_tags</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$string_old</span><span class="token operator">!=</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token variable">$string</span><span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$string</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>利用这个SQL注入前提是绕过<code>sqlinsert</code>函数的过滤，绕过过滤不是很难就不详细解释。</p><p>回到上面的代码，进入这个逻辑要满足<code>IN_ADMIN</code> 常量已被定义。 跟踪 <code>IN_ADMIN</code> 常量。</p><p>在<code>/admin/index.php</code>文件中进行了定义。</p><pre class=" language-php"><code class="language-php"> <span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'IN_ADMIN'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//接口</span> <span class="token variable">$M_MODULE</span><span class="token operator">=</span><span class="token string">'admin'</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span>@<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'m'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token variable">$M_MODULE</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'m'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span>@<span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'n'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'n'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"index"</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span>@<span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"index"</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span>@<span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"doindex"</span><span class="token punctuation">;</span> @<span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'M_NAME'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'n'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> @<span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'M_MODULE'</span><span class="token punctuation">,</span> <span class="token variable">$M_MODULE</span><span class="token punctuation">)</span><span class="token punctuation">;</span> @<span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'M_CLASS'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> @<span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'M_ACTION'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">require_once</span> <span class="token string">'../app/system/entrance.php'</span><span class="token punctuation">;</span></code></pre><p>从上述代码发现 ,漏洞函数是add并且不带do，于是找到 do开头的函数。经过查找在<code>/app/system/message/web/message.class.php</code>文件找到了<code>domessage</code>。</p><pre class=" language-php"><code class="language-php">  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">domessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">global</span> <span class="token variable">$_M</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'action'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'add'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">check_field</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">add</span><span class="token punctuation">(</span><span class="token variable">$_M</span><span class="token punctuation">[</span><span class="token string">'form'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>             <span class="token variable">$classnow</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">input_class</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token variable">$data</span> <span class="token operator">=</span> load<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">sys_class</span><span class="token punctuation">(</span><span class="token string">'label'</span><span class="token punctuation">,</span> <span class="token string">'new'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'column'</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get_column_id</span><span class="token punctuation">(</span><span class="token variable">$classnow</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string">'access'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">add_array_input</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">seo</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string">'keywords'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string">'description'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">seo_title</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string">'ctitle'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">add_input</span><span class="token punctuation">(</span><span class="token string">'list'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">require_once</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">template</span><span class="token punctuation">(</span><span class="token string">'tem/message_index'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>  <span class="token punctuation">}</span></code></pre><p>至此我们已经分析完了Metinfo 6.1.2 SQL注入漏洞参数的整个流程。</p><h2 id="漏洞修复方案"><a href="#漏洞修复方案" class="headerlink" title="漏洞修复方案"></a>漏洞修复方案</h2><p>修改文件：</p><pre class=" language-php"><code class="language-php"><span class="token operator">/</span>app<span class="token operator">/</span>system<span class="token operator">/</span>message<span class="token operator">/</span>web<span class="token operator">/</span>message<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span>php</code></pre><p><strong>修改前</strong></p><pre class=" language-php"><code class="language-php"><span class="token number">1</span><span class="token variable">$met_fd_ok</span><span class="token operator">=</span><span class="token constant">DB</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">get_one</span><span class="token punctuation">(</span><span class="token string">"select * from {$_M[table][config]} where lang ='{$_M[form][lang]}' and  name= 'met_fd_ok' and columnid = {$_M[form][id]}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>修改后</strong></p><pre class=" language-php"><code class="language-php"><span class="token number">1</span><span class="token variable">$met_fd_ok</span><span class="token operator">=</span><span class="token constant">DB</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">get_one</span><span class="token punctuation">(</span><span class="token string">"select * from {$_M[table][config]} where lang ='{$_M[form][lang]}' and  name= 'met_fd_ok' and columnid = ‘{$_M[form][id]}’"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>官网已发布最新版本6.1.3修复此漏洞，请及时下载升级。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>渗透课堂</title>
      <link href="/2018/10/26/%E6%B8%97%E9%80%8F%E8%AF%BE%E5%A0%82/"/>
      <url>/2018/10/26/%E6%B8%97%E9%80%8F%E8%AF%BE%E5%A0%82/</url>
      
        <content type="html"><![CDATA[<p>1.什么是渗透测试</p><p><img src="/2018/10/26/渗透课堂/st1.jpg" alt=""> </p><p>2.为什么需要做渗透测试</p><p><img src="/2018/10/26/渗透课堂/st2.jpg" alt=""> </p><p>3.渗透测试流程</p><p><img src="/2018/10/26/渗透课堂/st3.jpg" alt=""> </p><p>渗透测试找哪家<br>一秋网络科技渗透测试团队，由经验丰富的专业安全工程师组成，成员也一直在学习和研究最新的漏洞及漏洞利用   和防护，能够提供全方位的漏洞挖掘、最深入的web安全检测服务。我们有着许多成功的渗透测试案例，包括银     行、电商、政府、电力、企业等典型的客户，因此有着非常丰富的渗透测试经验及最的技术，能够为客户提供同时   具备深度和广度的web安全检测，能够帮助客户从根源上防止黑客的攻击，为客户提供保架护航的能力。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>“XSS攻击另类玩法”</title>
      <link href="/2018/10/10/XSS%E6%94%BB%E5%87%BB%E5%8F%A6%E7%B1%BB%E7%8E%A9%E6%B3%95/"/>
      <url>/2018/10/10/XSS%E6%94%BB%E5%87%BB%E5%8F%A6%E7%B1%BB%E7%8E%A9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>1.XSS攻击管理员<br>后台触发存储型XSS，网站设置http-only，窃取的cookie无效。那么如何在这种情况下利用xss漏洞。无法获取cookie，但是我们可以利用xss漏洞，以管理员的权限，添加一个新的管理员。没错，就是让管理员给我们加一个高权限账号。这里我们会用到 JavaScript和Ajax 技术。 利用xmlhttp 发送一个http请求，在后台发送一个添加管理员的post请求。<br><img src="/2018/10/10/XSS攻击另类玩法/xss1.jpg" alt=""><br>2.XSS截取客户的屏幕<br>现在随着技术的进步，前端技术支持的面非常广泛。xss漏洞可以利用html5的 canvas 来进行屏幕的截屏功能，类似于远程控制木马查看对方屏幕功能。这个可以大大的提高对于进一步入侵的信息收集。废话不说直接上代码。这里需要用到一个js库 html2canvas.js<br><img src="/2018/10/10/XSS攻击另类玩法/xss2.jpg" alt=""><br>上面的代码是针对 pc端的截屏，手机端的截屏xss代码有所不同<br><img src="/2018/10/10/XSS攻击另类玩法/xss3.jpg" alt=""><br>这两种服务端获取到的post数据包是 base64格式的 ，我们只要进行转码即可看到对方的屏幕截图。<br>3.现在越来越多的人喜欢用手机查看网页，xss针对手机端的支持也很友好。这里只针对手机端Firefox浏览器说明。xss获取对方经纬度代码<br><img src="/2018/10/10/XSS攻击另类玩法/xss4.jpg" alt=""><br>xss获取电池状态的代码，这里需要用到JavaScript Battery API<br><img src="/2018/10/10/XSS攻击另类玩法/xss5.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 攻击类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>入坑路由器安全</title>
      <link href="/2018/09/25/%E5%85%A5%E5%9D%91%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%89%E5%85%A8/"/>
      <url>/2018/09/25/%E5%85%A5%E5%9D%91%E8%B7%AF%E7%94%B1%E5%99%A8%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>1.QEMU安装<br><img src="/2018/09/25/入坑路由器安全/1.jpg" alt=""> </p><p>2.QEMU 网络配置<br><img src="/2018/09/25/入坑路由器安全/2.jpg" alt=""><br><img src="/2018/09/25/入坑路由器安全/3.jpg" alt=""><br><img src="/2018/09/25/入坑路由器安全/4.jpg" alt=""><br><img src="/2018/09/25/入坑路由器安全/5.jpg" alt=""></p><p>3.启动QEMU<br><img src="/2018/09/25/入坑路由器安全/6.jpg" alt=""></p><p>4.DIR601 踩坑<br>把 D-Link dir601 固件包导入qemu虚拟机,解压并进入squashfs-root 文件夹</p><p>解压web目录<br><img src="/2018/09/25/入坑路由器安全/7.jpg" alt=""><br>直接运行http服务会报各种错误，需要手动创建文件夹，以及文件<br>创建文件: /var/run/lighttpd.pid<br>创建文件:/log/lighttpd/error.log<br>WWW目录下 rt文件夹里面的所有文件，移动到 www目录<br><img src="/2018/09/25/入坑路由器安全/8.jpg" alt=""></p><p>5.启动固件<br><img src="/2018/09/25/入坑路由器安全/9.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 技术类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由器 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
